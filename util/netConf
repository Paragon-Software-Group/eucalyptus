#!/bin/sh
RED='\033[0;31m'         #  ${RED}
GREEN='\033[0;32m'      #  ${GREEN}
NORMAL='\033[0m'
CONFIGURED=7      #exit code for configured iface
INITFAIL=3      #exit code on initialize walrus
IPNOTFOUND=-2
NOCONN=-1
NOARGS=1

if [ $# -eq 0 ]; then
	help
    exit $NOARGS
fi

configFolder=~/configs
mkdir $configFolder >>/dev/null 2>>/dev/null

if(( "$1" != "0" ));
then
	gdiHost=$1
else
	gdiHost="8.8.8.8"
fi

if [[ ! -n $2 ]];
then
	memJava="2048m"
else
	if(( "$2" != "0" ));
	then
		memJava=$2
	else
		memJava="2048m"
	fi
fi


iFaces=ifaces.lst
touch $iFaces
cd /etc/sysconfig/network-scripts
rm -f ifcfg-
rm -f ifcfg-eth*
service network restart >>/dev/null 2>>/dev/null
ifconfig -a | grep eth | sed "s/\ .*//g" >$configFolder/$iFaces
cp -f /etc/eucaliptus/eucalyptus.conf.rpmnew /etc/eucaliptus/eucalyptus.conf >>/dev/null 2>>/dev/null

##Configuring network adapters
##----------------------------------------------------------------------------------------
networkConf


##Configuring s3 cmd utility
##----------------------------------------------------------------------------------------
s3cfg

##Configuring java parameters
##----------------------------------------------------------------------------------------
javaConf $memJava








function networkConf
{
echo -n "Reconfiguring network adapters"
for 
for $mainIface in `cat $configFolder/$iFaces | grep eth`;
do
	echo "BOOTPROTO=dhcp
NM_CONTROLLED=yes
TYPE=Ethernet
DEVICE=$mainIface
ONBOOT=yes">ifcfg-$mainIface
	dhclient $mainIface >>/dev/null 2>>/dev/null
done
rm -f rm -f ifcfg-
service network status | grep -A1 "active devices" | grep -v "devices" | sed "s/ /\n/g" >$configFolder/$iFaces
echo -e "[${GREEN}DONE${NORMAL}]"
cd ~
echo -n "Restarting network service: "
service network restart >>/dev/null 2>>/dev/null
echo -e "[${GREEN}DONE${NORMAL}]"
sleep 1
iFace="NULL"
ip="0.0.0.0"
for iFace in `cat $configFolder/$iFaces`;
do
        ifconfig $iFace up
		
        echo -en "Checking interface: $iFace: "
        if(( `ping -I $iFace -c 3 ${gdiHost} | grep -c "64 bytes from ${gdiHost}"` == 3 ));
        then
                echo -e " [${GREEN}SUCCESS${NORMAL}]"
                echo "Interface with existing internet connection: $iFace";
                break;
        fi
        echo -e " [${RED}FAILED${NORMAL}]"
		iFace="NULL"
done
if(( $iFace = "NULL" ))
then

                echo $iFace
                echo "no Interfaces with connection"
                exit $NOCONN
else
        if(( `ifconfig $iFace | grep "inet addr" | sed "s/.*inet addr://" | sed "s/  Bcast.*//" | wc -l` !=0 ));
        then
                ip=`ifconfig $iFace | grep "inet addr" | sed "s/.*inet addr://" | sed "s/  Bcast.*//"`;
        else
                echo "No ip found on interface $iFace; exiting. Try to find it manually"
                exit $IPNOTFOUND;
        fi
fi
echo "Ip found. Using $ip on interface $iFace"
echo -n "Trying to apply $ip as walrus address: "
eucaCount=`euca_conf --list-walruses 2>>/dev/null | wc -l`
if (( $eucaCount ==  0 | `euca_conf --list-walruses 2>>/dev/null | grep -c $ip` == 0 ));
then
	euca_conf --register-walrus $ip>>/dev/null 2>>/dev/null
else
	echo -e "${GREEN}Service is already configured${NORMAL}"
	exit $CONFIGURED
fi
if(( $? == 0 ));
then
        echo -e "[${GREEN}DONE${NORMAL}]"
        service eucalyptus-cloud restart>>/dev/null 2>>/dev/null
		sleep 1800;
		echo -e "${GREEN}Walrus storage has successfully initiated${NORMAL}"
else
        echo -e "[${RED}FAILED${NORMAL}]"
        echo -e "${RED}Error has been occurred. Please check your Eucalyptus installation${NORMAL}"
		exit $INITFAIL
fi
}
function s3cfg {
echo "Configuring s3cmd utility to work with Walrus"
mkdir ~/configs/
echo -n "Please provide access key for your eucalyptus: "
read access_key
echo -n "\nPlease provide secret key for your eucalyptus: "
read secret_key
echo "[default]
access_key = $access_key
secret_key = $secret_key
host_base = $ip:8773
host_bucket = $ip:8773
service_path = /services/Walrus
bucket_location = US
default_mime_type = binary/octet-stream
delete_removed = False
dry_run = False
enable_multipart = True
encoding = UTF-8
encrypt = False
follow_symlinks = False
force = False
get_continue = False
gpg_command = /usr/bin/gpg
gpg_decrypt = %(gpg_command)s -d --verbose --no-use-agent --batch --yes --passphrase-fd %(passphrase_fd)s -o %(output_file)s %(input_file)s
gpg_encrypt = %(gpg_command)s -c --verbose --no-use-agent --batch --yes --passphrase-fd %(passphrase_fd)s -o %(output_file)s %(input_file)s
gpg_passphrase =
guess_mime_type = True
human_readable_sizes = False
invalidate_on_cf = False
list_md5 = False
log_target_prefix =
mime_type =
multipart_chunk_size_mb = 15
preserve_attrs = True
progress_meter = True
proxy_host =
proxy_port = 0
recursive = False
recv_chunk = 4096
reduced_redundancy = False
send_chunk = 4096
skip_existing = False
socket_timeout = 300
urlencoding_mode = normal
use_https = False
verbosity = WARNING
">~/configs/walrusCfg
echo -e "\n[${GREEN}DONE${NORMAL}]"
}

function help {
    echo "Network configuration script"
	echo "Possible options:"
	echo "netConf [gdi-host-ip|conf] [memory limit]"
	echo "if gdi-host-ip set to \"0\" interfaces configuring according \"8.8.8.8\" address"
	echo "Memory limit is set according JAVA specifications. set's as -Xmx setting"
	echo "\"netConf\" conf configures s3cmd service for correct work"
}
function javaConf{
#Eucalyptus Java Configuration
memJava=$1
cp /etc/eucalyptus/eucalyptus.conf /etc/eucalyptus/eucalyptus.conf.backup >>/dev/null 2>>/dev/null
echo "Seting java limits to $memJava :"
cat /etc/eucalyptus/eucalyptus.conf | sed "s/CLOUD_OPTS=\"\"/CLOUD_OPTS=\"-Xmx$memJava\"/">/etc/eucalyptus/eucalyptus.conf
echo -e "\n[${GREEN}DONE${NORMAL}]"
}